{"ast":null,"code":"var _jsxFileName = \"C:\\\\git repositories\\\\Simple-React-Native-Repo\\\\src\\\\screens\\\\ColourScreen.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\n\nvar ColourScreen = () => {\n  var [colors, setColors] = useState([]);\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    }\n  }, React.createElement(Button, {\n    title: \"Add a color\",\n    onPress: () => {\n      setColors([...colors, randomRgb()]);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    }\n  }), React.createElement(FlatList, {\n    keyExtractor: item => String(colors.indexOf(item) + 1),\n    data: colors,\n    renderItem: (_ref) => {\n      var {\n        item\n      } = _ref;\n      return React.createElement(View, {\n        style: {\n          height: 100,\n          width: 100,\n          backgroundColor: item\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    }\n  }));\n};\n\nvar randomRgb = () => {\n  var red = Math.floor(Math.random() * 256);\n  var green = Math.floor(Math.random() * 256);\n  var blue = Math.floor(Math.random() * 256);\n  return \"rgb(\".concat(red, \",\").concat(green, \",\").concat(blue, \")\");\n};\n\nvar styles = StyleSheet.create({});\nexport default ColourScreen;","map":{"version":3,"sources":["C:/git repositories/Simple-React-Native-Repo/src/screens/ColourScreen.js"],"names":["React","useState","ColourScreen","colors","setColors","randomRgb","item","String","indexOf","height","width","backgroundColor","red","Math","floor","random","green","blue","styles","StyleSheet","create"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAGA,IAAMC,YAAY,GAAG,MAAM;AACvB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC,EAAD,CAApC;AAEA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,aAAd;AAA4B,IAAA,OAAO,EAAE,MAAM;AACvCG,MAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAYE,SAAS,EAArB,CAAD,CAAT;AACH,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAII,oBAAC,QAAD;AACE,IAAA,YAAY,EAAGC,IAAD,IAAUC,MAAM,CAACJ,MAAM,CAACK,OAAP,CAAeF,IAAf,IAAuB,CAAxB,CADhC;AAEE,IAAA,IAAI,EAAEH,MAFR;AAGE,IAAA,UAAU,EAAE,UAAc;AAAA,UAAb;AAAEG,QAAAA;AAAF,OAAa;AACxB,aAAO,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACG,UAAAA,MAAM,EAAE,GAAT;AAAcC,UAAAA,KAAK,EAAE,GAArB;AAA0BC,UAAAA,eAAe,EAAEL;AAA3C,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAcH,CAjBD;;AAmBA,IAAMD,SAAS,GAAG,MAAM;AACpB,MAAMO,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAZ;AACA,MAAMC,KAAK,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAd;AACA,MAAME,IAAI,GAAGJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAb;AAEA,uBAAcH,GAAd,cAAqBI,KAArB,cAA8BC,IAA9B;AACH,CAND;;AAQA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf;AAEA,eAAelB,YAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { View, FlatList, StyleSheet, Button } from 'react-native';\r\n\r\nconst ColourScreen = () => {\r\n    const [colors, setColors] = useState([]);\r\n\r\n    return (\r\n        <View>\r\n            <Button title=\"Add a color\" onPress={() => {\r\n                setColors([...colors, randomRgb()])\r\n            }} />\r\n            <FlatList\r\n              keyExtractor={(item) => String(colors.indexOf(item) + 1)}\r\n              data={colors} \r\n              renderItem={({ item }) => {\r\n                return <View style={{height: 100, width: 100, backgroundColor: item}}/>;\r\n              }}\r\n            />\r\n        </View>\r\n    );\r\n}\r\n\r\nconst randomRgb = () => {\r\n    const red = Math.floor(Math.random() * 256);\r\n    const green = Math.floor(Math.random() * 256);\r\n    const blue = Math.floor(Math.random() * 256);\r\n\r\n    return `rgb(${red},${green},${blue})`;\r\n}\r\n\r\nconst styles = StyleSheet.create({});\r\n\r\nexport default ColourScreen;\r\n"]},"metadata":{},"sourceType":"module"}